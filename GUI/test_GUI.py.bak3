#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Jul 09, 2020 07:57:07 AM BST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import test_GUI_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    test_GUI_support.set_Tk_var()
    top = GUI (root)
    test_GUI_support.init(root, top)
    root.mainloop()

w = None
def create_GUI(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_GUI(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    test_GUI_support.set_Tk_var()
    top = GUI (w)
    test_GUI_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_GUI():
    global w
    w.destroy()
    w = None

class GUI:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font10 = "-family {DejaVu Sans} -size 16"
        font11 = "-family {DejaVu Sans} -size 20 -weight bold"
        font12 = "-family {DejaVu Sans} -size 19 -weight bold"

        top.geometry("1340x759+-88+11")
        top.minsize(1, 1)
        top.maxsize(1920, 1200)
        top.resizable(1, 1)
        top.title("EV GUI")
        top.configure(background="#d6c7c7")
        top.configure(highlightbackground="#d8d8d8")
        top.configure(highlightcolor="black")
        top.configure(highlightthickness="1")

        self.prj_name = tk.Message(top)
        self.prj_name.place(relx=0.119, rely=0.009, relheight=0.059
                , relwidth=0.219)
        self.prj_name.configure(background="#d6c7c7")
        self.prj_name.configure(font="-family {DejaVu Serif} -size 15 -weight normal -slant roman -underline 0 -overstrike 0")
        self.prj_name.configure(foreground="#ff0000")
        self.prj_name.configure(highlightbackground="#d6c7c7")
        self.prj_name.configure(highlightthickness="1")
        self.prj_name.configure(text='''EV Project @ RBVH/EJV''')
        self.prj_name.configure(width=293)

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Labelframe1 = tk.LabelFrame(top)
        self.Labelframe1.place(relx=0.513, rely=0.09, relheight=0.245
                , relwidth=0.47)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(text='''Data Output''')
        self.Labelframe1.configure(background="#a0d8ba")
        self.Labelframe1.configure(cursor="fleur")

        self.lb_VehSpd = tk.Label(self.Labelframe1)
        self.lb_VehSpd.place(relx=0.037, rely=0.215, height=31, width=70
                , bordermode='ignore')
        self.lb_VehSpd.configure(activebackground="#f9f9f9")
        self.lb_VehSpd.configure(background="#a0d8ba")
        self.lb_VehSpd.configure(cursor="fleur")
        self.lb_VehSpd.configure(font="-family {DejaVu Sans} -size 13 -weight normal -slant roman -underline 0 -overstrike 0")
        self.lb_VehSpd.configure(text='''Speed''')

        self.en_VehSpd = tk.Entry(self.Labelframe1)
        self.en_VehSpd.place(relx=0.149, rely=0.161, height=43, relwidth=0.327
                , bordermode='ignore')
        self.en_VehSpd.configure(background="white")
        self.en_VehSpd.configure(cursor="fleur")
        self.en_VehSpd.configure(font="TkFixedFont")
        self.en_VehSpd.configure(selectbackground="#c4c4c4")

        self.lb_Brk = tk.Label(self.Labelframe1)
        self.lb_Brk.place(relx=0.038, rely=0.591, height=31, width=70
                , bordermode='ignore')
        self.lb_Brk.configure(activebackground="#f9f9f9")
        self.lb_Brk.configure(background="#a0d8ba")
        self.lb_Brk.configure(cursor="fleur")
        self.lb_Brk.configure(font="-family {DejaVu Sans} -size 13 -weight normal -slant roman -underline 0 -overstrike 0")
        self.lb_Brk.configure(text='''Brake''')

        self.lb_Mode_Out = tk.Label(self.Labelframe1)
        self.lb_Mode_Out.place(relx=0.521, rely=0.204, height=31, width=70
                , bordermode='ignore')
        self.lb_Mode_Out.configure(activebackground="#f9f9f9")
        self.lb_Mode_Out.configure(background="#a0d8ba")
        self.lb_Mode_Out.configure(cursor="fleur")
        self.lb_Mode_Out.configure(font="-family {DejaVu Sans} -size 13 -weight normal -slant roman -underline 0 -overstrike 0")
        self.lb_Mode_Out.configure(text='''Mode''')

        self.la_Acc = tk.Label(self.Labelframe1)
        self.la_Acc.place(relx=0.524, rely=0.581, height=31, width=70
                , bordermode='ignore')
        self.la_Acc.configure(activebackground="#f9f9f9")
        self.la_Acc.configure(background="#a0d8ba")
        self.la_Acc.configure(cursor="fleur")
        self.la_Acc.configure(font="-family {DejaVu Sans} -size 13 -weight normal -slant roman -underline 0 -overstrike 0")
        self.la_Acc.configure(text='''Accel''')

        self.en_Brk = tk.Entry(self.Labelframe1)
        self.en_Brk.place(relx=0.149, rely=0.538, height=43, relwidth=0.327
                , bordermode='ignore')
        self.en_Brk.configure(background="white")
        self.en_Brk.configure(cursor="fleur")
        self.en_Brk.configure(font="TkFixedFont")
        self.en_Brk.configure(selectbackground="#c4c4c4")

        self.en_Mode = tk.Entry(self.Labelframe1)
        self.en_Mode.place(relx=0.629, rely=0.161, height=43, relwidth=0.327
                , bordermode='ignore')
        self.en_Mode.configure(background="white")
        self.en_Mode.configure(cursor="fleur")
        self.en_Mode.configure(font="TkFixedFont")
        self.en_Mode.configure(selectbackground="#c4c4c4")

        self.en_Acc = tk.Entry(self.Labelframe1)
        self.en_Acc.place(relx=0.629, rely=0.538, height=43, relwidth=0.327
                , bordermode='ignore')
        self.en_Acc.configure(background="white")
        self.en_Acc.configure(cursor="fleur")
        self.en_Acc.configure(font="TkFixedFont")
        self.en_Acc.configure(selectbackground="#c4c4c4")

        self.Labelframe1_6 = tk.LabelFrame(top)
        self.Labelframe1_6.place(relx=0.028, rely=0.366, relheight=0.586
                , relwidth=0.469)
        self.Labelframe1_6.configure(relief='raised')
        self.Labelframe1_6.configure(relief="raised")
        self.Labelframe1_6.configure(text='''Data Output''')
        self.Labelframe1_6.configure(background="#a3f9ff")
        self.Labelframe1_6.configure(highlightbackground="#000000")

        self.btn_eStop = tk.Button(self.Labelframe1_6)
        self.btn_eStop.place(relx=0.684, rely=0.674, height=101, width=151
                , bordermode='ignore')
        self.btn_eStop.configure(activebackground="#ff0303")
        self.btn_eStop.configure(activeforeground="white")
        self.btn_eStop.configure(activeforeground="#ffffff")
        self.btn_eStop.configure(background="#ff0303")
        self.btn_eStop.configure(borderwidth="5")
        self.btn_eStop.configure(cursor="hand2")
        self.btn_eStop.configure(font=font11)
        self.btn_eStop.configure(highlightbackground="#ffffff")
        self.btn_eStop.configure(highlightthickness="3")
        self.btn_eStop.configure(overrelief="groove")
        self.btn_eStop.configure(relief="groove")
        self.btn_eStop.configure(text='''STOP''')

        self.rdBtn_Mode_Eco = tk.Radiobutton(self.Labelframe1_6)
        self.rdBtn_Mode_Eco.place(relx=0.27, rely=0.119, relheight=0.049
                , relwidth=0.146, bordermode='ignore')
        self.rdBtn_Mode_Eco.configure(activebackground="#93e0e5")
        self.rdBtn_Mode_Eco.configure(background="#a3f9ff")
        self.rdBtn_Mode_Eco.configure(cursor="fleur")
        self.rdBtn_Mode_Eco.configure(font=font10)
        self.rdBtn_Mode_Eco.configure(highlightbackground="#a3f9ff")
        self.rdBtn_Mode_Eco.configure(justify='left')
        self.rdBtn_Mode_Eco.configure(text='''ECO''')
        self.rdBtn_Mode_Eco.configure(variable=test_GUI_support.rdBtn_Mode_Eco)

        self.rdBtn_Mode_Spt = tk.Radiobutton(self.Labelframe1_6)
        self.rdBtn_Mode_Spt.place(relx=0.471, rely=0.121, relheight=0.052
                , relwidth=0.175, bordermode='ignore')
        self.rdBtn_Mode_Spt.configure(activebackground="#93e0e5")
        self.rdBtn_Mode_Spt.configure(background="#a3f9ff")
        self.rdBtn_Mode_Spt.configure(cursor="hand2")
        self.rdBtn_Mode_Spt.configure(font=font10)
        self.rdBtn_Mode_Spt.configure(highlightbackground="#a3f9ff")
        self.rdBtn_Mode_Spt.configure(justify='left')
        self.rdBtn_Mode_Spt.configure(text='''Sport''')
        self.rdBtn_Mode_Spt.configure(variable=test_GUI_support.rdBtn_Mode_Spt)

        self.rdBtn_Mode_3 = tk.Radiobutton(self.Labelframe1_6)
        self.rdBtn_Mode_3.place(relx=0.7, rely=0.124, relheight=0.052
                , relwidth=0.191, bordermode='ignore')
        self.rdBtn_Mode_3.configure(activebackground="#93e0e5")
        self.rdBtn_Mode_3.configure(background="#a3f9ff")
        self.rdBtn_Mode_3.configure(borderwidth="0")
        self.rdBtn_Mode_3.configure(cursor="hand2")
        self.rdBtn_Mode_3.configure(font=font10)
        self.rdBtn_Mode_3.configure(highlightbackground="#a3f9ff")
        self.rdBtn_Mode_3.configure(justify='left')
        self.rdBtn_Mode_3.configure(text='''Mode 3''')
        self.rdBtn_Mode_3.configure(variable=test_GUI_support.rdBtn_Mode_3)

        self.Entry2 = tk.Entry(self.Labelframe1_6)
        self.Entry2.place(relx=0.335, rely=0.281, height=33, relwidth=0.614
                , bordermode='ignore')
        self.Entry2.configure(background="white")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(selectbackground="#c4c4c4")

        self.lb_Mode = tk.Label(self.Labelframe1_6)
        self.lb_Mode.place(relx=0.079, rely=0.112, height=31, width=80
                , bordermode='ignore')
        self.lb_Mode.configure(activebackground="#f9f9f9")
        self.lb_Mode.configure(background="#a3f9ff")
        self.lb_Mode.configure(cursor="fleur")
        self.lb_Mode.configure(font=font10)
        self.lb_Mode.configure(text='''Mode''')

        self.Label1_4 = tk.Label(self.Labelframe1_6)
        self.Label1_4.place(relx=0.032, rely=0.283, height=31, width=70
                , bordermode='ignore')
        self.Label1_4.configure(activebackground="#f9f9f9")
        self.Label1_4.configure(background="#a3f9ff")
        self.Label1_4.configure(font="-family {DejaVu Sans} -size 13 -weight normal -slant roman -underline 0 -overstrike 0")
        self.Label1_4.configure(text='''Label''')

        self.Label1_1 = tk.Label(self.Labelframe1_6)
        self.Label1_1.place(relx=0.032, rely=0.458, height=31, width=70
                , bordermode='ignore')
        self.Label1_1.configure(activebackground="#f9f9f9")
        self.Label1_1.configure(background="#a3f9ff")
        self.Label1_1.configure(font="-family {DejaVu Sans} -size 13 -weight normal -slant roman -underline 0 -overstrike 0")
        self.Label1_1.configure(text='''Label''')

        self.Scale1 = tk.Scale(self.Labelframe1_6, from_=0.0, to=100.0)
        self.Scale1.place(relx=0.326, rely=0.429, relwidth=0.626, relheight=0.0
                , height=42, bordermode='ignore')
        self.Scale1.configure(activebackground="#a3f9ff")
        self.Scale1.configure(background="#a3f9ff")
        self.Scale1.configure(cursor="hand2")
        self.Scale1.configure(highlightbackground="#a3f9ff")
        self.Scale1.configure(orient="horizontal")
        self.Scale1.configure(troughcolor="#ffffff")

        self.btn_Unlock = tk.Button(self.Labelframe1_6)
        self.btn_Unlock.place(relx=0.079, rely=0.674, height=101, width=151
                , bordermode='ignore')
        self.btn_Unlock.configure(activebackground="#46ff03")
        self.btn_Unlock.configure(activeforeground="#ffffff")
        self.btn_Unlock.configure(background="#46ff03")
        self.btn_Unlock.configure(borderwidth="5")
        self.btn_Unlock.configure(cursor="hand2")
        self.btn_Unlock.configure(font=font12)
        self.btn_Unlock.configure(highlightbackground="#ffffff")
        self.btn_Unlock.configure(highlightcolor="#ffffff")
        self.btn_Unlock.configure(highlightthickness="3")
        self.btn_Unlock.configure(overrelief="groove")
        self.btn_Unlock.configure(relief="groove")
        self.btn_Unlock.configure(text='''UNLOCK''')

        self.btn_Lock = tk.Button(self.Labelframe1_6)
        self.btn_Lock.place(relx=0.382, rely=0.674, height=101, width=151
                , bordermode='ignore')
        self.btn_Lock.configure(activebackground="#f7ff0f")
        self.btn_Lock.configure(activeforeground="#ffffff")
        self.btn_Lock.configure(background="#f7ff0f")
        self.btn_Lock.configure(borderwidth="5")
        self.btn_Lock.configure(cursor="hand2")
        self.btn_Lock.configure(font="-family {DejaVu Sans} -size 20 -weight bold -slant roman -underline 0 -overstrike 0")
        self.btn_Lock.configure(highlightbackground="#ffffff")
        self.btn_Lock.configure(highlightcolor="#ffffff")
        self.btn_Lock.configure(highlightthickness="3")
        self.btn_Lock.configure(overrelief="groove")
        self.btn_Lock.configure(relief="groove")
        self.btn_Lock.configure(text='''LOCK''')

        self.Labelframe1_7 = tk.LabelFrame(top)
        self.Labelframe1_7.place(relx=0.513, rely=0.366, relheight=0.586
                , relwidth=0.47)
        self.Labelframe1_7.configure(relief='groove')
        self.Labelframe1_7.configure(text='''Graph''')
        self.Labelframe1_7.configure(background="#fcfcd1")
        self.Labelframe1_7.configure(highlightcolor="#ffffff")

    @staticmethod
    def popup1(event, *args, **kwargs):
        Popupmenu1 = tk.Menu(root, tearoff=0)
        Popupmenu1.configure(activebackground="#f9f9f9")
        Popupmenu1.post(event.x_root, event.y_root)

    @staticmethod
    def popup2(event, *args, **kwargs):
        Popupmenu2 = tk.Menu(root, tearoff=0)
        Popupmenu2.configure(activebackground="#f9f9f9")
        Popupmenu2.post(event.x_root, event.y_root)

    @staticmethod
    def popup3(event, *args, **kwargs):
        Popupmenu3 = tk.Menu(root, tearoff=0)
        Popupmenu3.configure(activebackground="#f9f9f9")
        Popupmenu3.post(event.x_root, event.y_root)

    @staticmethod
    def popup4(event, *args, **kwargs):
        Popupmenu4 = tk.Menu(root, tearoff=0)
        Popupmenu4.configure(activebackground="#f9f9f9")
        Popupmenu4.post(event.x_root, event.y_root)

    @staticmethod
    def popup5(event, *args, **kwargs):
        Popupmenu5 = tk.Menu(root, tearoff=0)
        Popupmenu5.configure(activebackground="#f9f9f9")
        Popupmenu5.post(event.x_root, event.y_root)

    @staticmethod
    def popup6(event, *args, **kwargs):
        Popupmenu6 = tk.Menu(root, tearoff=0)
        Popupmenu6.configure(activebackground="#f9f9f9")
        Popupmenu6.post(event.x_root, event.y_root)

    @staticmethod
    def popup7(event, *args, **kwargs):
        Popupmenu7 = tk.Menu(root, tearoff=0)
        Popupmenu7.configure(activebackground="#f9f9f9")
        Popupmenu7.post(event.x_root, event.y_root)

    @staticmethod
    def popup8(event, *args, **kwargs):
        Popupmenu8 = tk.Menu(root, tearoff=0)
        Popupmenu8.configure(activebackground="#f9f9f9")
        Popupmenu8.post(event.x_root, event.y_root)

    @staticmethod
    def popup9(event, *args, **kwargs):
        Popupmenu9 = tk.Menu(root, tearoff=0)
        Popupmenu9.configure(activebackground="#f9f9f9")
        Popupmenu9.post(event.x_root, event.y_root)

    @staticmethod
    def popup10(event, *args, **kwargs):
        Popupmenu10 = tk.Menu(root, tearoff=0)
        Popupmenu10.configure(activebackground="#f9f9f9")
        Popupmenu10.post(event.x_root, event.y_root)

    @staticmethod
    def popup11(event, *args, **kwargs):
        Popupmenu11 = tk.Menu(root, tearoff=0)
        Popupmenu11.configure(activebackground="#f9f9f9")
        Popupmenu11.post(event.x_root, event.y_root)

if __name__ == '__main__':
    vp_start_gui()





